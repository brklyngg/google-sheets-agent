// QuickBooks OAuth integration module\n\nfunction setupQuickBooks() {\n  const service = getOAuthService();\n  if (!service.hasAccess()) {\n    const authorizationUrl = service.getAuthorizationUrl();\n    const template = HtmlService.createTemplate(\n      '<a href=\"<?= authorizationUrl ?>\" target=\"_blank\">Authorize</a>'\n    );\n    template.authorizationUrl = authorizationUrl;\n    const page = template.evaluate();\n    SpreadsheetApp.getUi().showModalDialog(page, 'Authorize QuickBooks');\n  }\n}\n\nfunction getOAuthService() {\n  return OAuth2.createService('quickbooks')\n    .setAuthorizationBaseUrl('https://appcenter.intuit.com/connect/oauth2')\n    .setTokenUrl('https://oauth.platform.intuit.com/oauth2/v1/tokens/bearer')\n    .setClientId(PropertiesService.getScriptProperties().getProperty('QB_CLIENT_ID'))\n    .setClientSecret(PropertiesService.getScriptProperties().getProperty('QB_CLIENT_SECRET'))\n    .setCallbackFunction('handleQuickBooksCallback')\n    .setPropertyStore(PropertiesService.getUserProperties());\n}\n\nfunction fetchProfitAndLoss(startDate, endDate) {\n  const token = getOAuthService().getAccessToken();\n  const url = `${CONFIG.QUICKBOOKS_API_BASE}/reports/ProfitAndLoss?start_date=${startDate}&end_date=${endDate}`;\n  \n  const response = UrlFetchApp.fetch(url, {\n    headers: {\n      'Authorization': `Bearer ${token}`,\n      'Accept': 'application/json'\n    }\n  });\n  \n  return JSON.parse(response.getContentText());\n}